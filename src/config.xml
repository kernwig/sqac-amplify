<?xml version='1.0' encoding='utf-8'?>
<widget id="net.fanello.sqac" version="1.0.0" xmlns="http://www.w3.org/ns/widgets" xmlns:gap="http://phonegap.com/ns/1.0" xmlns:android="http://schemas.android.com/apk/res/android">
    <name>SqAC</name>
    <description>
<h1>WHAT?</h1>

Square Auto-Choreographer (SqAC, pronounced like squawk) is a computer program to assist a caller,
or even a square dancer, in calling patter.

<h1>WHY?</h1>

Becoming a proficient square dance caller is a long studious process. Beyond knowing the call definitions,
as very good dancers do, a caller must know each call’s starting and ending formations and timing.
Hundreds of sequences of get-ins, get-outs, and modules must be memorized
(whether they call them “modules”, “sequences”, or “I just know what to call”).
Throw in available hands, flow, multiple resolution techniques, presentation and singing skills,
and the cost of entry to become any good is really high.
For years, this caller-to-be is either not calling because he isn’t good and no good because he isn’t calling,
or the dancers are suffering through low quality dances. Would-be callers may become overwhelmed or frustrated,
and give up.
This hurts the activity. Many regions can’t have many dances, and support multiple levels of dances,
because of a limited resource: callers. So either the selection of available dances are limited,
dance quality is low with newbie callers, or the quality callers become overworked and underpaid charity
providers of their years of study, to support the dance community.

<h1>WHO?</h1>

This application is not designed to replace a highly skilled caller! It can never be as good as a professional,
and those who start off using SqAC may find themselves depending less and less on it as their skill grow.
SqAC is designed for two use cases:
<ol>
    <li>New callers who need some help to get started, gaining experience and confidence by calling dances that are actually fun.</li>
    <li>Small groups of dancers who can’t afford or access a professional caller, but have among them someone who can use this application.</li>
</ol>

SqAC’s role is to assist a newbie caller by taking on some of the work. By doing so,
it quickly raises the quality of the dances for the dancers, and provides the experience and confidence
the new caller needs to gradually build skills.
It also allows those who may never have the time to dedicate to becoming a proficient caller,
to be able to pick up the microphone and get a small group of friends dancing.
Finally, by opening up calling to more people, it is hoped that SqAC will help bring more dancers too.

<h1>SQAC IS NOT:</h1>
<ul>
    <li>SqAC is not a caller, Don’t try connecting it to a voice synthesizer and expect to enjoy the results. It’s only an assistant.</li>
    <li>SqAC is not an audio recording. You could dance to a CD of a professional caller, but how long before you have the tips on that CD memorized? SqAC generates a unique dance every time.</li>
    <li>SqAC is not a music player. You must supply your own music and player. SqView (http://www.sqview.se) is quite popular for this.</li>
    <li>SqAC doesn’t know singing calls. Again, SqView can play the music and display the lyrics and calls.</li>
    <li>SqAC doesn’t generate modules, it puts them to use! Download collections from the online SqAC community. Or, develop your own modules with checkers or SD (http://www.lynette.org/sd/), and then enter them into SqAC.</li>
    <li>SqAC doesn’t show animated dancers. In fact, it knows nothing of the mechanics of calls or formation, because it doesn’t need to. For virtual dancers, try SD, Taminations (http://www.tamtwirlers.org/tamination), or Callerama (http://www.callarama.com).</li>
</ul>

    </description>
    <author email="sqac@fanello.net" href="http://fanello.net/sqac">
        Adam Fanello
    </author>
    <content src="index.html" />

    <!--
    If you do not want any permissions to be added to your app, add the
    following tag to your config.xml; you will still have the INTERNET
    permission on your app, which PhoneGap requires.
    -->
    <preference name="permissions"                value="none"/>

    <!-- Customize your app and platform with the preference element. -->
    <preference name="orientation"                value="default" />        <!-- all: default means both landscape and portrait are enabled -->
    <preference name="target-device"              value="universal" />      <!-- all: possible values handset, tablet, or universal -->
    <preference name="fullscreen"                 value="false" />          <!-- all: hides the status bar at the top of the screen -->
    <preference name="webviewbounce"              value="true" />           <!-- ios: control whether the screen 'bounces' when scrolled beyond the top -->
    <preference name="prerendered-icon"           value="true" />           <!-- ios: if icon is prerendered, iOS will not apply it's gloss to the app's icon on the user's home screen -->
    <preference name="stay-in-webview"            value="false" />          <!-- ios: external links should open in the default browser, 'true' would use the webview the app lives in -->
    <preference name="ios-statusbarstyle"         value="black-opaque" />   <!-- ios: black-translucent will appear black because the PhoneGap webview doesn't go beneath the status bar -->
    <preference name="detect-data-types"          value="true" />           <!-- ios: controls whether data types (such as phone no. and dates) are automatically turned into links by the system -->
    <preference name="exit-on-suspend"            value="false" />          <!-- ios: if set to true, app will terminate when home button is pressed -->
    <preference name="show-splash-screen-spinner" value="true" />           <!-- ios: if set to false, the spinner won't appear on the splash screen during app loading -->
    <preference name="auto-hide-splash-screen"    value="true" />           <!-- ios: if set to false, the splash screen must be hidden using a JavaScript API -->
    <preference name="android-installLocation"    value="auto" />           <!-- android: app install location. 'auto' will choose. 'internalOnly' is device memory. 'preferExternal' is SDCard. -->
    <!--
        Define a specific version of PhoneGap to build into your app.
        <preference name="phonegap-version"       value="3.5.0" />
    -->

    <!-- Plugins -->

    <!-- Core plugins -->
    <!--<plugin name="cordova-plugin-battery-status" />-->
    <!--<plugin name="cordova-plugin-camera" />-->
    <!--<plugin name="cordova-plugin-media-capture" />-->
    <!--<plugin name="cordova-plugin-console" />-->
    <!--<plugin name="cordova-plugin-contacts" />-->
    <!--<plugin name="cordova-plugin-device" />-->
    <!--<plugin name="cordova-plugin-device-motion" />-->
    <!--<plugin name="cordova-plugin-device-orientation" />-->
    <!--<plugin name="cordova-plugin-dialogs" />-->
    <!--<plugin name="cordova-plugin-file" />-->
    <!--<plugin name="cordova-plugin-file-transfer" />-->
    <!--<plugin name="cordova-plugin-geolocation" />-->
    <!--<plugin name="cordova-plugin-globalization" />-->
    <!--<plugin name="cordova-plugin-inappbrowser" />-->
    <!--<plugin name="cordova-plugin-media" />-->
    <!--<plugin name="cordova-plugin-network-information" />-->
    <!--<plugin name="cordova-plugin-splashscreen" />-->
    <!--<plugin name="cordova-plugin-vibration" />-->

    <!-- Third party plugins -->
    <!-- A list of available plugins are available at https://build.phonegap.com/plugins -->
    <!--
        <plugin name="com.phonegap.plugins.barcodescanner" />
    -->

    <!-- Define app icon for each platform. -->
    <!--<icon src="icon.png" />-->
    <!--<icon src="res/icon/android/icon-36-ldpi.png"   gap:platform="android"    gap:qualifier="ldpi" />-->
    <!--<icon src="res/icon/android/icon-48-mdpi.png"   gap:platform="android"    gap:qualifier="mdpi" />-->
    <!--<icon src="res/icon/android/icon-72-hdpi.png"   gap:platform="android"    gap:qualifier="hdpi" />-->
    <!--<icon src="res/icon/android/icon-96-xhdpi.png"  gap:platform="android"    gap:qualifier="xhdpi" />-->
    <!--<icon src="res/icon/ios/icon-57.png"            gap:platform="ios"        width="57" height="57" />-->
    <!--<icon src="res/icon/ios/icon-72.png"            gap:platform="ios"        width="72" height="72" />-->
    <!--<icon src="res/icon/ios/icon-57-2x.png"         gap:platform="ios"        width="114" height="114" />-->
    <!--<icon src="res/icon/ios/icon-72-2x.png"         gap:platform="ios"        width="144" height="144" />-->
    <!--<icon src="res/icon/windows-phone/icon-48.png"  gap:platform="winphone" />-->
    <!--<icon src="res/icon/windows-phone/icon-173.png" gap:platform="winphone"   gap:role="background" />-->

    <!-- Define app splash screen for each platform. -->
    <!--<gap:splash src="res/screen/android/screen-ldpi-portrait.png"       gap:platform="android" gap:qualifier="port-ldpi" />-->
    <!--<gap:splash src="res/screen/android/screen-mdpi-portrait.png"       gap:platform="android" gap:qualifier="port-mdpi" />-->
    <!--<gap:splash src="res/screen/android/screen-hdpi-portrait.png"       gap:platform="android" gap:qualifier="port-hdpi" />-->
    <!--<gap:splash src="res/screen/android/screen-xhdpi-portrait.png"      gap:platform="android" gap:qualifier="port-xhdpi" />-->
    <!--<gap:splash src="res/screen/ios/screen-iphone-portrait.png"         gap:platform="ios"     width="320" height="480" />-->
    <!--<gap:splash src="res/screen/ios/screen-iphone-portrait-2x.png"      gap:platform="ios"     width="640" height="960" />-->
    <!--<gap:splash src="res/screen/ios/screen-iphone-portrait-568h-2x.png" gap:platform="ios"     width="640" height="1136" />-->
    <!--<gap:splash src="res/screen/ios/screen-ipad-portrait.png"           gap:platform="ios"     width="768" height="1024" />-->
    <!--<gap:splash src="res/screen/ios/screen-ipad-landscape.png"          gap:platform="ios"     width="1024" height="768" />-->
    <!--<gap:splash src="res/screen/windows-phone/screen-portrait.jpg"      gap:platform="winphone" />-->

    <!--<gap:config-file platform="ios" parent="CFBundleShortVersionString">-->
        <!--<string>100</string>-->
    <!--</gap:config-file>-->

    <!--
        Define access to external domains.
        <access />            - a blank access tag denies access to all external resources.
        <access origin="*" /> - a wildcard access tag allows access to all external resource.
        Otherwise, you can specify specific domains:
        <access origin="http://phonegap.com" />                    - allow any secure requests to http://phonegap.com/
        <access origin="http://phonegap.com" subdomains="true" />  - same as above, but including subdomains, such as http://build.phonegap.com/
        <access origin="http://phonegap.com" browserOnly="true" /> - only allows http://phonegap.com to be opened by the child browser.
    -->

    <access origin="*"/>
    <access origin="*"/>
    <access origin="https://*.google-analytics.com"/>
    <access origin="https://*.googleapis.com"/>
    <access origin="https://*.firebaseio.com"/>

    <!-- Added the following intents to support the removal of whitelist code from base cordova to a plugin -->
    <!-- Whitelist configuration. Refer to https://cordova.apache.org/docs/en/edge/guide_appdev_whitelist_index.md.html -->
    <plugin name="cordova-plugin-whitelist" version="1" />
    <allow-navigation href="https://*/*" />
    <allow-navigation href="data:*" />
    <allow-intent href="http://*/*" />
    <allow-intent href="https://*/*" />
    <!--<allow-intent href="tel:*" />-->
    <!--<allow-intent href="sms:*" />-->
    <!--<allow-intent href="mailto:*" />-->
    <!--<allow-intent href="geo:*" />-->
    <platform name="android">
        <allow-intent href="market:*" />
    </platform>
    <!--<platform name="ios">-->
        <!--<allow-intent href="itms:*" />-->
        <!--<allow-intent href="itms-apps:*" />-->
    <!--</platform>-->

</widget>
